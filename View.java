/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pbo.project;

//import com.sun.glass.ui.View;
import java.awt.Dialog;
import java.sql.Connection; 
import java.sql.DriverManager; 
import java.sql.PreparedStatement; 
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AfrizalNurkholik
 */
public class View extends javax.swing.JFrame {

    /**
     * Creates new form View
     */
    public View() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fName = new javax.swing.JTextField();
        fAsal = new javax.swing.JTextField();
        fTujuan = new javax.swing.JTextField();
        SUBMIT = new javax.swing.JButton();
        CLEAR = new javax.swing.JButton();
        SEARCHBTN = new javax.swing.JButton();
        DELETE = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        SEARCHDATA = new javax.swing.JTextField();
        UPDATE1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DATA DIRI PENUMPANG");
        setPreferredSize(new java.awt.Dimension(1300, 700));

        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 1500));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setText("DATA DIRI PENUMPANG BUS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("NAMA PENUMPANG");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("KOTA ASAL");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("KOTA TUJUAN");

        fName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fNameActionPerformed(evt);
            }
        });

        fAsal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fAsalActionPerformed(evt);
            }
        });

        fTujuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fTujuanActionPerformed(evt);
            }
        });

        SUBMIT.setText("SUBMIT");
        SUBMIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SUBMITActionPerformed(evt);
            }
        });

        CLEAR.setText("CLEAR");
        CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEARActionPerformed(evt);
            }
        });

        SEARCHBTN.setText("FIND");
        SEARCHBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEARCHBTNActionPerformed(evt);
            }
        });

        DELETE.setText("DELETE");
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "NAMA PENUMPANG", "KOTA ASAL", "KOTA TUJUAN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table);
        if (Table.getColumnModel().getColumnCount() > 0) {
            Table.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("ID PENUMPANG");

        SEARCHDATA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEARCHDATAActionPerformed(evt);
            }
        });

        UPDATE1.setText("UPDATE");
        UPDATE1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATE1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(fName)
                    .addComponent(fAsal)
                    .addComponent(fTujuan)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(SEARCHDATA, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(24, 24, 24)
                            .addComponent(SEARCHBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(SUBMIT)
                            .addGap(18, 18, 18)
                            .addComponent(DELETE)
                            .addGap(18, 18, 18)
                            .addComponent(UPDATE1)
                            .addGap(50, 50, 50)
                            .addComponent(CLEAR))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(387, 387, 387))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(fAsal, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fTujuan, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SUBMIT, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UPDATE1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CLEAR, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SEARCHDATA, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SEARCHBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(415, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1119, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 976, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(233, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
       String ID;
       int notFound = 0;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");

            String url = "jdbc:MySQL://localhost:3306/db_bus";
            String user = "root";
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            
            ID = SEARCHDATA.getText();
            if ("".equals(ID)){
            JOptionPane.showMessageDialog(new JFrame(), "ID Harus Diisi", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else{
                String sql = "SELECT * FROM user WHERE id=" +ID;
                ResultSet rs = st.executeQuery(sql);  
                while (rs.next()){
                notFound = 1;
                String sql2 = "DELETE FROM user WHERE id=" +ID;
                st.executeQuery(sql2);
                loadData();
                con.close();
                }
                if (notFound == 0){
                    JOptionPane.showMessageDialog(new JFrame(), "ID Tidak ada", "Dialog", JOptionPane.ERROR_MESSAGE);
                }
            }
                 }catch(Exception e){
            System.out.println("Error "+ e.getMessage());
        }   
    }//GEN-LAST:event_DELETEActionPerformed

    private void SEARCHBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEARCHBTNActionPerformed
       String ID;
       int notFound = 0;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");

            String url = "jdbc:MySQL://localhost:3306/db_bus";
            String user = "root";
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            
            ID = SEARCHDATA.getText();
            if ("".equals(ID)){
            JOptionPane.showMessageDialog(new JFrame(), "ID Harus Diisi", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else{
                String sql = "SELECT * FROM user WHERE id=" +ID;
                ResultSet rs = st.executeQuery(sql);  
                while (rs.next()){
                fName.setText(rs.getString("Nama"));
                fAsal.setText(rs.getString("Asal"));
                fTujuan.setText(rs.getString("Tujuan"));
                notFound = 1;
                con.close();
                }
                if (notFound == 0){
                    JOptionPane.showMessageDialog(new JFrame(), "ID Tidak ada", "Dialog", JOptionPane.ERROR_MESSAGE);
                }
            }
                 }catch(Exception e){
            System.out.println("Error "+ e.getMessage());
        }       
    }//GEN-LAST:event_SEARCHBTNActionPerformed

    private void CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEARActionPerformed
                fName.setText("");
                fAsal.setText("");
                fTujuan.setText("");
    }//GEN-LAST:event_CLEARActionPerformed

    private void SUBMITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SUBMITActionPerformed
        String NM, NM1, NM2, Query;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");

            String url = "jdbc:MySQL://localhost:3306/db_bus";
            String user = "root";
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();

            if ("".equals(fName.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Nama Penumpang Harus Diisi", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else   if ("".equals(fAsal.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Asal Penumpang Harus Diisi", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else  if ("".equals(fTujuan.getText())){
                JOptionPane.showMessageDialog(new JFrame(), "Tujuan Penumpang Harus Diisi", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else{
                NM = fName.getText();
                NM1 = fAsal.getText();
                NM2 = fTujuan.getText();
                Query = "INSERT INTO user (Nama, Asal, Tujuan) VALUES('"+NM+"','"+NM1+"','"+NM2+"')";
                st.executeUpdate(Query);
                fName.setText("");
                fAsal.setText("");
                fTujuan.setText("");
                showMessageDialog(null, "Data Sudah di registrasi");
                loadData();
                con.close();
            }

        }catch(Exception e){
            System.out.println("Error "+ e.getMessage());
        }

        //System.out.println(NM);
    }//GEN-LAST:event_SUBMITActionPerformed

    private void fTujuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fTujuanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fTujuanActionPerformed

    private void fAsalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fAsalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fAsalActionPerformed

    private void fNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fNameActionPerformed

    private void SEARCHDATAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEARCHDATAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SEARCHDATAActionPerformed

    private void UPDATE1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATE1ActionPerformed
        String ID;
       int notFound = 0;
       String NM, NM1, NM2, Query;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");

            String url = "jdbc:MySQL://localhost:3306/db_bus";
            String user = "root";
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            
            ID = SEARCHDATA.getText();
            if ("".equals(ID)){
            JOptionPane.showMessageDialog(new JFrame(), "ID Harus Diisi", "Dialog", JOptionPane.ERROR_MESSAGE);
            }else{
                String sql = "SELECT * FROM user WHERE id=" +ID;
                ResultSet rs = st.executeQuery(sql);  
                while (rs.next()){
                notFound = 1;
                NM = fName.getText();
                NM1 = fAsal.getText();
                NM2 = fTujuan.getText();
                String sql2 = "UPDATE user SET WHERE Nama='"+NM+"',Asal='"+NM1+"',Tujuan='"+NM2+"' id=" +ID;
                st.executeQuery(sql2);
                loadData();
                con.close();
                }
                if (notFound == 0){
                    JOptionPane.showMessageDialog(new JFrame(), "ID Tidak ada", "Dialog", JOptionPane.ERROR_MESSAGE);
                }
            }
                 }catch(Exception e){
            System.out.println("Error "+ e.getMessage());
        }   
    }//GEN-LAST:event_UPDATE1ActionPerformed
    public void loadData() throws SQLException{
    };
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                View x = new View();
                x.LoadData();
                x.setLocationRelativeTo(null);
                x.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CLEAR;
    private javax.swing.JButton DELETE;
    private javax.swing.JButton SEARCHBTN;
    private javax.swing.JTextField SEARCHDATA;
    private javax.swing.JButton SUBMIT;
    private javax.swing.JTable Table;
    private javax.swing.JButton UPDATE1;
    private javax.swing.JTextField fAsal;
    private javax.swing.JTextField fName;
    private javax.swing.JTextField fTujuan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void showMassageDialog(Object object, String data_Sudah_di_registrasi) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void LoadData() {
         try {
        Class.forName("com.mysql.cj.jdbc.Driver");

            String url = "jdbc:MySQL://localhost:3306/db_bus";
            String user = "root";
            String pass = "";

            Connection con = DriverManager.getConnection(url, user, pass);
            Statement st = con.createStatement();
            
       DefaultTableModel model = new DefaultTableModel(new String []{"ID", "NAMA PENUMPANG", "KOTA ASAL", "KOTA TUJUAN"}, 0);
       
       
       Table.setModel(model);
       String sql = "SELECT * FROM USER";
       
       ResultSet rs = st.executeQuery(sql);
       String i, f, l, e;
       while (rs.next()){
           i = rs.getString("ID");
           f = rs.getString("NAMA");
           l = rs.getString("ASAL");
           e = rs.getString("TUJUAN");
           model.addRow(new Object[]{i, f, l, e,});
           
       }
 }catch(Exception e){
            System.out.println("Error "+ e.getMessage());
        } //To change body of generated methods, choose Tools | Templates.
    }
}
